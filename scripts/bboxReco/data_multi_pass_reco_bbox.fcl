////////////////////////////////////////////////////////////////////////
// data_multi_pass_reco_bbox.fcl
//
// Multi-pass reconstruction with bounding box filtering
// Based on data_multi_pass_reco.fcl but with CSV-based bounding box
// filtering applied before hit finding.
//
////////////////////////////////////////////////////////////////////////

#include "services_lariat.fcl"
#include "caldata_lariat.fcl"
#include "hitfindermodules_lariat.fcl"
#include "trackfindermodules.fcl"
#include "calorimetry_lariat.fcl"
#include "lariat_reco_algs.fcl"
#include "lariatbeamlinereco.fcl"
#include "services_lariat.fcl"
#include "lariatanamodules.fcl"
#include "lariatfiltermodules.fcl"
#include "lariatclustermodules.fcl"
#include "distortedhitremoval.fcl"
#include "wcqualityproducer.fcl"
#include "wctracktpctrackmatch.fcl"

process_name: RecoBBox

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "hist_bbox_%p_%tc.root" }
  RandomNumberGenerator: {} # ART native random number generator
  TimeTracker: { }
  #message:  @local::standard_info
  @table::lariat_services
}

services.scheduler.SkipEvent: [ ProductNotFound ]

source:
{
  module_type: RootInput
  maxEvents:  -1        # Number of events to create
}

# Define reconstruction sequences
beamlinereco: [ tof, wctrack ]

# Modified TPC reconstruction sequence with bounding box filter
tpcrecoOriginBbox: [ bboxcaldata, gaushitOrigin, trajclusterOrigin, pmtrackOrigin ]
tpcreco: [ gaushit, hitnumfilter, trajcluster, pmtrack, calo, linecluster, pmtracklc, calolc ]

# Full reconstruction with bounding box filtering
fullRecoBeamBbox:   [
                  @sequence::beamlinereco
                  ,toffilter
                  ,wctrackfilter 
                  ,wcquality
                  ,caldata
                  ,@sequence::tpcrecoOriginBbox 
                  ,@sequence::tpcreco 
                  ,wctracktpctrackmatch 
                  ,wctracktpctrackuniquematch 
                ]

# TPC-only reconstruction with bounding box (no beamline)
fullRecoBboxOnly: [
                  caldata
                  ,@sequence::tpcrecoOriginBbox 
                  ,@sequence::tpcreco 
                ]

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

  producers:
  {
    # beamline producers
    tof:                   @local::lariat_tof
    wctrack:               @local::lariat_wctrackbuilder
    wcquality:             @local::lariat_wcqualityproducer

    # tpc producers
    caldata:               @local::lariat_calroi

    # NEW: bounding box filter
    bboxcaldata: {
      module_type: "BoundingBoxCalDataFilter"
      CalDataModuleLabel: "caldata"     # Input calibrated data module
      CSVFile: "bboxReco.csv"          # CSV file with bounding box definitions
      ZeroOutside: true                # Set to true to zero data outside boxes, false to keep unchanged
      DebugMode: false                 # Set to true for verbose debugging output
    }

    # initial 1st-pass (using bbox filtered data)
    gaushitOrigin:         @local::lariat_gaushitfinder
    trajclusterOrigin:     @local::lariat_trajcluster
    pmtrackOrigin:         @local::standard_pmalgtrackmaker

    # primary hit producer
    gaushit:               @local::lariat_distortedhitremoval

    # cluster producers
    trajcluster:           @local::lariat_trajcluster
    linecluster:           @local::standard_linecluster
    
    # track and calo producers
    pmtrack:               @local::standard_pmalgtrackmaker
    calo:                  @local::standard_calodata
    pmtracklc:             @local::standard_pmalgtrackmaker
    calolc:                @local::standard_calodata

    # wire-chamber track match producer
    wctracktpctrackmatch:  @local::lariat_wctracktpctrackmatch
    wctracktpctrackuniquematch:  @local::lariat_wctracktpctrackmatch
  }

  filters:
  {
    timestampfilter: @local::lariat_timestampfilter
    toffilter:       @local::lariat_toffilter
    wctrackfilter:   @local::lariat_wctrackfilter
    hitnumfilter:    @local::lariat_hitnumberfilter
  }

  analyzers:
  {
    # standard anatree (using trajcluster)
    anatree:    @local::lariat_anatree

    # using linecluster
    anatreelc:  @local::lariat_anatree
  }

  #define the producer and filter modules for this path, order matters, 
  #filters reject all following items.  see lines starting physics.producers below
  reco: [ timestampfilter, @sequence::fullRecoBeamBbox ] 

  ana: [ anatree ]

  #define the output stream, there could be more than one if using filters 
  stream1:  [ out1 ]

  #trigger_paths is a keyword and contains the paths that modify the art::event, 
  #ie filters and producers
  trigger_paths: [ reco ] 

  #end_paths is a keyword and contains the paths that do not modify the art::Event, 
  #ie analyzers and output streams.  these all run simultaneously
  end_paths:     [ stream1, ana]
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
  out1:
  {
    module_type: RootOutput
    fileName:    "%ifb_bbox_%p_%tc.root"
    dataTier:    "reconstructed"
    compressionLevel: 1
    SelectEvents: [reco]
  }
}

# Drop the first-pass reco products and bounding box intermediate data from the event
outputs.out1.outputCommands:  [
   "keep *_*_*_*",
   "drop *_gaushitOrigin_*_*",
   "drop *_pmtrackOrigin_*_*",
   "drop *_trajclusterOrigin_*_*",
   "drop *_bboxcaldata_*_*"
]


### Here, we overwrite ALL module labels with the ones defined above.

# DataSelection can be set to "pedestal", "beam", or "cosmic"
# Leave blank ("") to use T1 and T2 instead.
physics.filters.timestampfilter.DataSelection:      "beam"
physics.filters.timestampfilter.RequireRawDigits:   true

physics.filters.toffilter.nTOFObjects:    1   # number of TOF objects in the event to pass the filter
physics.filters.toffilter.TOFLowerBound:  0   # minimum time for the TOF object (ns)
physics.filters.toffilter.TOFUpperBound:  100 # maximum time for the TOF object (ns)

physics.filters.wctrackfilter.IsData:            true
physics.filters.wctrackfilter.minNumberWCTrack:  1       

physics.producers.tof.HitThreshold:         -3.  # -10.0 for Run I, -3.0 for Run II
physics.producers.tof.HitDiffMeanUS:        0.5  # 0.6 for Run I, 0.5 for Run II
physics.producers.tof.HitDiffMeanDS:        0.4  # 1.0 for Run I, 0.4 for Run II
physics.producers.tof.HitMatchThresholdUS:  3.0
physics.producers.tof.HitMatchThresholdDS:  6.0
physics.producers.tof.HitWait:              20.

physics.producers.wctrack.PickyTracks:                            false
physics.producers.wctrack.LoadBFieldFromDatabase:                 true
physics.producers.wctrack.WCTrackBuilderAlg.BFieldInTesla:        0.3361 #.3361T for 100A .2121T for 60A
physics.producers.wctrack.WCTrackBuilderAlg.MCMagneticFieldTesla: 0.3361 #.3361T for 100A .2121T for 60A. Make this the same as BFieldInTesla. 
physics.producers.wctrack.WCTrackBuilderAlg.LEffective:           1143.7 
physics.producers.wctrack.WCTrackBuilderAlg.MomentumScaleCalibration: -0.0033 #  from Martin's study; see section 6.1 of the LArIAT detector paper [arXiv:1911.10379]

physics.producers.wcquality.DataMPXCut: 1.5  #How far, from mean, can tracks be to pass. In cm 
physics.producers.wcquality.DataMPYCut: 1.5 #How far, from mean, can tracks be to pass 
physics.producers.wcquality.DataMPXOffset: 0.3 #Mean of Data DeltaX distribution. In cm
physics.producers.wcquality.DataMPYOffset: 0  # Mean of Data DeltaY distrubition
physics.producers.wcquality.ApplyMidplaneCut: true
physics.producers.wcquality.ApplyCollimatorCut: true
physics.producers.wcquality.ApplyMassCut: false #Turn this off if you dont want a mass cut done for you.
physics.producers.wcquality.LowerMassLimit: -350 #These are for low mass particles, change to match your definition of kaon or proton
physics.producers.wcquality.UpperMassLimit: 350 #These are for low mass particles, change to match your definition of kaon or proton

physics.producers.caldata.DigitModuleLabel:   "daq"
physics.producers.caldata.DodQdxCalib:        true
physics.producers.caldata.dQdxCalibFileName:  "LArIATChargeCorrectionFactors_Run2.txt"

#//////////////////////////////////////////////////////////////////////
# BOUNDING BOX CONFIGURATION
#//////////////////////////////////////////////////////////////////////

# Configure the bounding box filter
physics.producers.bboxcaldata.CalDataModuleLabel: "caldata"
physics.producers.bboxcaldata.CSVFile: "bboxReco.csv"
physics.producers.bboxcaldata.ZeroOutside: true
physics.producers.bboxcaldata.DebugMode: false

#//////////////////////////////////////////////////////////////////////
# FIRST PASS TPC RECONSTRUCTION (using bbox filtered data)
#//////////////////////////////////////////////////////////////////////

# Use bbox filtered data for first pass hit finding
physics.producers.gaushitOrigin.CalDataModuleLabel:   "bboxcaldata"
physics.producers.gaushitOrigin.Chi2NDFRetry:         1000. 
physics.producers.gaushitOrigin.Chi2NDF:              5000.0
physics.producers.gaushitOrigin.MinSig:               [ 1.0, 2.0 ]
physics.producers.gaushitOrigin.MinWidth:             [ 1.0, 2.0 ]        # hit width threshold, per plane
physics.producers.gaushitOrigin.TryNplus1Fits:        0
physics.producers.gaushitOrigin.AreaMethod:           0
physics.producers.gaushitOrigin.AreaNorms:            [ 13.25, 26.31 ]    # normalizations that put signal area in 
                                                                          # same scale as peak height. 

# trajcluster settings are centralized in LArSoftConfigurations/cluster_lariat.fcl
physics.producers.trajclusterOrigin.HitModuleLabel:       "gaushitOrigin"
physics.producers.trajclusterOrigin.HitTruthModuleLabel:  "gaushitOrigin"
physics.producers.trajclusterOrigin.TrajClusterAlg:       @local::lariat_trajclusteralg_run2

physics.producers.pmtrackOrigin.ClusterModuleLabel:               "trajclusterOrigin"
physics.producers.pmtrackOrigin.HitModuleLabel:                   "trajclusterOrigin"
physics.producers.pmtrackOrigin.PMAlgTracking.MinSeedSize2ndPass: 2
physics.producers.pmtrackOrigin.PMAlgTracking.FlipToBeam:         true
physics.producers.pmtrackOrigin.PMAlgTracking.RunVertexing:       true

#//////////////////////////////////////////////////////////////////////
# second pass of TPC-based reconstruction
#//////////////////////////////////////////////////////////////////////

# this is NOT @local::gaus_hitfinder; this is @local::lariat_distortedhitremoval
# this is used to remove the distorted hits that result from the fringe E field
# near the edges of the TPC
physics.producers.gaushit.HitLabel:    "gaushitOrigin"
physics.producers.gaushit.TrackLabel:  "pmtrackOrigin"
physics.producers.gaushit.ZLow:        1.0   # remove hits that are within 3 cm of the front face of the TPC
physics.producers.gaushit.ZHigh:       89.0  # remove hits that are within 3 cm of the back face of the TPC

# This module will count the number of reconstructed hits on each plane and 
# write histograms to the output histogram file. Can also be used to filter 
# out events with a high number of hits.
physics.filters.hitnumfilter.HitsModuleLabel:         "gaushit"
physics.filters.hitnumfilter.HitsInstance:            ""
physics.filters.hitnumfilter.MaxNumHits:              [ -999, -999 ] # neg. = filter not used

# trajcluster settings are centralized in LArSoftConfigurations/cluster_lariat.fcl
physics.producers.trajcluster.HitModuleLabel:         "gaushit"
physics.producers.trajcluster.HitTruthModuleLabel:    "gaushit"
physics.producers.trajcluster.TrajClusterAlg:         @local::lariat_trajclusteralg_run2

physics.producers.linecluster.HitFinderModuleLabel:     "gaushit"
physics.producers.linecluster.ClusterCrawlerAlg:        @local::lariat_clustercrawleralg 

physics.producers.pmtrack.ClusterModuleLabel:                 "trajcluster"
physics.producers.pmtrack.HitModuleLabel:                     "trajcluster"
physics.producers.pmtrack.PMAlgTracking.MinSeedSize2ndPass:   3
physics.producers.pmtrack.PMAlgTracking.FlipToBeam:           true
physics.producers.pmtrack.PMAlgTracking.RunVertexing:         true

physics.producers.pmtracklc.ClusterModuleLabel:               "linecluster"
physics.producers.pmtracklc.HitModuleLabel:                   "linecluster"
physics.producers.pmtracklc.PMAlgTracking.MinSeedSize2ndPass: 3
physics.producers.pmtracklc.PMAlgTracking.FlipToBeam:         true
physics.producers.pmtracklc.PMAlgTracking.RunVertexing:       true
#physics.producers.pmtracklc.PMAlgTracking.AutoFlip_dQdx:      true

physics.producers.calo.CaloAlg:               @local::lariat_calorimetryalgdata_run2  # data
physics.producers.calo.TrackModuleLabel:      "pmtrack"
physics.producers.calo.SpacePointModuleLabel: "pmtrack"
physics.producers.calo.UseArea:               "true"
physics.producers.calo.FlipTrack_dQdx:        "true"

physics.producers.calolc.CaloAlg:               @local::lariat_calorimetryalgdata_run2  # data
physics.producers.calolc.TrackModuleLabel:      "pmtracklc"
physics.producers.calolc.SpacePointModuleLabel: "pmtracklc"
physics.producers.calolc.UseArea:               "true"
physics.producers.calolc.FlipTrack_dQdx:        "true"

# These settings now centralized in LArIATRecoModule/wctracktpctrackmatch.fcl
#physics.producers.wctracktpctrackmatch.AlphaCut:            0.226893
#physics.producers.wctracktpctrackmatch.MinTrackLengthZProj: 4.0
#physics.producers.wctracktpctrackmatch.MinUpstreamZ:        2.0
#physics.producers.wctracktpctrackmatch.MaxUpstreamZ:        6.0
#physics.producers.wctracktpctrackmatch.CircularCutXCenter:  1.6
#physics.producers.wctracktpctrackmatch.CircularCutYCenter:  -0.17
#physics.producers.wctracktpctrackmatch.CircularCutRadius:   5.0
#physics.producers.wctracktpctrackmatch.UniqueMatchMode:     false

physics.producers.wctracktpctrackuniquematch.UniqueMatchMode:     true

physics.analyzers.anatree.SelectEvents:             [ reco ]
physics.analyzers.anatree.ClusterModuleLabel:       "trajcluster"
physics.analyzers.anatree.TrackModuleLabel:         "pmtrack"
physics.analyzers.anatree.CalorimetryModuleLabel:   "calo"

physics.analyzers.anatreelc.SelectEvents:           [ reco ]
physics.analyzers.anatreelc.ClusterModuleLabel:     "linecluster"
physics.analyzers.anatreelc.TrackModuleLabel:       "pmtracklc"
physics.analyzers.anatreelc.CalorimetryModuleLabel: "calolc"
  
  # Shut up common error messages
  services.message: {
    destinations: {
           STDCOUT: {
              categories: {
                 BackTracker: { limit: 0  reportEvery: 0 }
                 ProjectionMatchingAlg: { limit: 0  reportEvery: 0 }
              }
              threshold: "WARNING"
              type: "cout"
           }
    }
  }
